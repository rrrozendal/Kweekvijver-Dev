// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class APointLight;
struct FLinearColor;
struct FVector;
struct FRotator;
#ifdef TRUESKYPLUGIN_TrueSkySequenceActor_generated_h
#error "TrueSkySequenceActor.generated.h already included, missing '#pragma once' in TrueSkySequenceActor.h"
#endif
#define TRUESKYPLUGIN_TrueSkySequenceActor_generated_h

#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execGetInterpolatedSkyKeyframe) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetInterpolatedSkyKeyframe(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetInterpolatedCloudKeyframe) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetInterpolatedCloudKeyframe(Z_Param_layer); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetPreviousSkyKeyframeBeforeTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetPreviousSkyKeyframeBeforeTime(Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextSkyKeyframeAfterTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextSkyKeyframeAfterTime(Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSkyKeyframeByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetSkyKeyframeByIndex(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetPreviousCloudKeyframeBeforeTime) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetPreviousCloudKeyframeBeforeTime(Z_Param_layer,Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextCloudKeyframeAfterTime) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextCloudKeyframeAfterTime(Z_Param_layer,Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetCloudKeyframeByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetCloudKeyframeByIndex(Z_Param_layer,Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextModifiableCloudKeyframe) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextModifiableCloudKeyframe(Z_Param_layer); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextModifiableSkyKeyframe) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextModifiableSkyKeyframe(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetPointLight) \
	{ \
		P_GET_OBJECT(APointLight,Z_Param_source); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetPointLight(Z_Param_source); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetPointLightSource) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_id); \
		P_GET_STRUCT(FLinearColor,Z_Param_lightColour); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Intensity); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_minRadius); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_maxRadius); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetPointLightSource(Z_Param_id,Z_Param_lightColour,Z_Param_Intensity,Z_Param_pos,Z_Param_minRadius,Z_Param_maxRadius); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoonColor) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FLinearColor*)Z_Param__Result=ATrueSkySequenceActor::GetMoonColor(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoonIntensity) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetMoonIntensity(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSunIntensity) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetSunIntensity(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMetresPerUnit) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetMetresPerUnit(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSunColor) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FLinearColor*)Z_Param__Result=ATrueSkySequenceActor::GetSunColor(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetRainAtPosition) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_QueryId); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetRainAtPosition(Z_Param_QueryId,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetCloudShadowAtPosition) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_QueryId); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetCloudShadowAtPosition(Z_Param_QueryId,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCloudPointTest) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_QueryId); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::CloudPointTest(Z_Param_QueryId,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCloudLineTest) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_queryId); \
		P_GET_STRUCT(FVector,Z_Param_StartPos); \
		P_GET_STRUCT(FVector,Z_Param_EndPos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::CloudLineTest(Z_Param_queryId,Z_Param_StartPos,Z_Param_EndPos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetMoonRotation) \
	{ \
		P_GET_STRUCT(FRotator,Z_Param_r); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetMoonRotation(Z_Param_r); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetSunRotation) \
	{ \
		P_GET_STRUCT(FRotator,Z_Param_r); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetSunRotation(Z_Param_r); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoonRotation) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FRotator*)Z_Param__Result=ATrueSkySequenceActor::GetMoonRotation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSunRotation) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FRotator*)Z_Param__Result=ATrueSkySequenceActor::GetSunRotation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetKeyframeInt) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UIntProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetKeyframeInt(Z_Param_keyframeUid,Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetKeyframeInt) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetKeyframeInt(Z_Param_keyframeUid,Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetKeyframeFloat) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetKeyframeFloat(Z_Param_keyframeUid,Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetKeyframeFloat) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetKeyframeFloat(Z_Param_keyframeUid,Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetBool) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_UBOOL(Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetBool(Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetInt) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UIntProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetInt(Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetInt) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetInt(Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetFloat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetFloat(Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetFloatAtPosition) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetFloatAtPosition(Z_Param_name,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetFloat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetFloat(Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetTime) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetTime(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetTime(Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetProfilingText) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_cpu_level); \
		P_GET_PROPERTY(UIntProperty,Z_Param_gpu_level); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FString*)Z_Param__Result=ATrueSkySequenceActor::GetProfilingText(Z_Param_cpu_level,Z_Param_gpu_level); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSpawnLightning) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_pos1); \
		P_GET_STRUCT(FVector,Z_Param_pos2); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_magnitude); \
		P_GET_STRUCT(FVector,Z_Param_colour); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::SpawnLightning(Z_Param_pos1,Z_Param_pos2,Z_Param_magnitude,Z_Param_colour); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetLightning) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_start); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_end); \
		P_GET_PROPERTY_REF(UFloatProperty,Z_Param_Out_magnitude); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_colour); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetLightning(Z_Param_Out_start,Z_Param_Out_end,Z_Param_Out_magnitude,Z_Param_Out_colour); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetReferenceSpectralRadiance) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetReferenceSpectralRadiance(); \
		P_NATIVE_END; \
	}


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execGetInterpolatedSkyKeyframe) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetInterpolatedSkyKeyframe(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetInterpolatedCloudKeyframe) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetInterpolatedCloudKeyframe(Z_Param_layer); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetPreviousSkyKeyframeBeforeTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetPreviousSkyKeyframeBeforeTime(Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextSkyKeyframeAfterTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextSkyKeyframeAfterTime(Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSkyKeyframeByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetSkyKeyframeByIndex(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetPreviousCloudKeyframeBeforeTime) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetPreviousCloudKeyframeBeforeTime(Z_Param_layer,Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextCloudKeyframeAfterTime) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_t); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextCloudKeyframeAfterTime(Z_Param_layer,Z_Param_t); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetCloudKeyframeByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetCloudKeyframeByIndex(Z_Param_layer,Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextModifiableCloudKeyframe) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_layer); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextModifiableCloudKeyframe(Z_Param_layer); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetNextModifiableSkyKeyframe) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetNextModifiableSkyKeyframe(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetPointLight) \
	{ \
		P_GET_OBJECT(APointLight,Z_Param_source); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetPointLight(Z_Param_source); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetPointLightSource) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_id); \
		P_GET_STRUCT(FLinearColor,Z_Param_lightColour); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Intensity); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_minRadius); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_maxRadius); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetPointLightSource(Z_Param_id,Z_Param_lightColour,Z_Param_Intensity,Z_Param_pos,Z_Param_minRadius,Z_Param_maxRadius); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoonColor) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FLinearColor*)Z_Param__Result=ATrueSkySequenceActor::GetMoonColor(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoonIntensity) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetMoonIntensity(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSunIntensity) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetSunIntensity(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMetresPerUnit) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetMetresPerUnit(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSunColor) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FLinearColor*)Z_Param__Result=ATrueSkySequenceActor::GetSunColor(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetRainAtPosition) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_QueryId); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetRainAtPosition(Z_Param_QueryId,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetCloudShadowAtPosition) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_QueryId); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetCloudShadowAtPosition(Z_Param_QueryId,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCloudPointTest) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_QueryId); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::CloudPointTest(Z_Param_QueryId,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execCloudLineTest) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_queryId); \
		P_GET_STRUCT(FVector,Z_Param_StartPos); \
		P_GET_STRUCT(FVector,Z_Param_EndPos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::CloudLineTest(Z_Param_queryId,Z_Param_StartPos,Z_Param_EndPos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetMoonRotation) \
	{ \
		P_GET_STRUCT(FRotator,Z_Param_r); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetMoonRotation(Z_Param_r); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetSunRotation) \
	{ \
		P_GET_STRUCT(FRotator,Z_Param_r); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetSunRotation(Z_Param_r); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoonRotation) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FRotator*)Z_Param__Result=ATrueSkySequenceActor::GetMoonRotation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetSunRotation) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FRotator*)Z_Param__Result=ATrueSkySequenceActor::GetSunRotation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetKeyframeInt) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UIntProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetKeyframeInt(Z_Param_keyframeUid,Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetKeyframeInt) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetKeyframeInt(Z_Param_keyframeUid,Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetKeyframeFloat) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetKeyframeFloat(Z_Param_keyframeUid,Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetKeyframeFloat) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_keyframeUid); \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetKeyframeFloat(Z_Param_keyframeUid,Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetBool) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_UBOOL(Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetBool(Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetInt) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UIntProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetInt(Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetInt) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetInt(Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetFloat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetFloat(Z_Param_name,Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetFloatAtPosition) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_GET_STRUCT(FVector,Z_Param_pos); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetFloatAtPosition(Z_Param_name,Z_Param_pos); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetFloat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_name); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetFloat(Z_Param_name); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetTime) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetTime(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_value); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		ATrueSkySequenceActor::SetTime(Z_Param_value); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetProfilingText) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_cpu_level); \
		P_GET_PROPERTY(UIntProperty,Z_Param_gpu_level); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FString*)Z_Param__Result=ATrueSkySequenceActor::GetProfilingText(Z_Param_cpu_level,Z_Param_gpu_level); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSpawnLightning) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_pos1); \
		P_GET_STRUCT(FVector,Z_Param_pos2); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_magnitude); \
		P_GET_STRUCT(FVector,Z_Param_colour); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::SpawnLightning(Z_Param_pos1,Z_Param_pos2,Z_Param_magnitude,Z_Param_colour); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetLightning) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_start); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_end); \
		P_GET_PROPERTY_REF(UFloatProperty,Z_Param_Out_magnitude); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_colour); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=ATrueSkySequenceActor::GetLightning(Z_Param_Out_start,Z_Param_Out_end,Z_Param_Out_magnitude,Z_Param_Out_colour); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetReferenceSpectralRadiance) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=ATrueSkySequenceActor::GetReferenceSpectralRadiance(); \
		P_NATIVE_END; \
	}


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesATrueSkySequenceActor(); \
	friend TRUESKYPLUGIN_API class UClass* Z_Construct_UClass_ATrueSkySequenceActor(); \
	public: \
	DECLARE_CLASS(ATrueSkySequenceActor, AActor, COMPILED_IN_FLAGS(0 | CLASS_Config), 0, TEXT("/Script/TrueSkyPlugin"), TRUESKYPLUGIN_API) \
	DECLARE_SERIALIZER(ATrueSkySequenceActor) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_INCLASS \
	private: \
	static void StaticRegisterNativesATrueSkySequenceActor(); \
	friend TRUESKYPLUGIN_API class UClass* Z_Construct_UClass_ATrueSkySequenceActor(); \
	public: \
	DECLARE_CLASS(ATrueSkySequenceActor, AActor, COMPILED_IN_FLAGS(0 | CLASS_Config), 0, TEXT("/Script/TrueSkyPlugin"), TRUESKYPLUGIN_API) \
	DECLARE_SERIALIZER(ATrueSkySequenceActor) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	TRUESKYPLUGIN_API ATrueSkySequenceActor(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ATrueSkySequenceActor) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(TRUESKYPLUGIN_API, ATrueSkySequenceActor); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ATrueSkySequenceActor); \
private: \
	/** Private copy-constructor, should never be used */ \
	TRUESKYPLUGIN_API ATrueSkySequenceActor(const ATrueSkySequenceActor& InCopy); \
public:


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	TRUESKYPLUGIN_API ATrueSkySequenceActor(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	TRUESKYPLUGIN_API ATrueSkySequenceActor(const ATrueSkySequenceActor& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(TRUESKYPLUGIN_API, ATrueSkySequenceActor); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ATrueSkySequenceActor); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ATrueSkySequenceActor)


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_35_PROLOG
#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_RPC_WRAPPERS \
	HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_INCLASS \
	HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_RPC_WRAPPERS_NO_PURE_DECLS \
	HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_INCLASS_NO_PURE_DECLS \
	HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h_38_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class TrueSkySequenceActor."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID HostProject_Plugins_TrueSkyPlugin_Source_TrueSkyPlugin_Classes_TrueSkySequenceActor_h


#define FOREACH_ENUM_PRECIPITATIONOPTIONSENUM(op) \
	op(PrecipitationOptionsEnum::None) \
	op(PrecipitationOptionsEnum::VelocityStreaks) \
	op(PrecipitationOptionsEnum::SimulationTime) 
#define FOREACH_ENUM_EINTERPOLATIONMODE(op) \
	op(EInterpolationMode::FixedNumber) \
	op(EInterpolationMode::RealTime) 
PRAGMA_ENABLE_DEPRECATION_WARNINGS
