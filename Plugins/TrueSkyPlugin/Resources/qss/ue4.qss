MainWindow,#MainWindowClass
{
	background-color: white;
}

QWidget
{
	background-color: #353535;
	color:white;
}

#tabContents,#scrollAreaContents,#propertiesWidget
{
	background-color: #535353;
}

#splitter,QWinWidget,#tabWidget
{
	background-color:  #252525;
}
#cloudsTab,QScrollArea,#scrollAreaWidgetContents_2
{
	background-color:  #535353;
}
DirectX11Widget
{
	color: red;
	background-color: rgba(1,1,72,255);
}

QTreeView
{
	color: black;
	background-color: #484848;
	margin: 0px;
	border: 0px;
	padding: 0px;
}

QHelpContentWidget
{
	color: black;
	background-color: white;
}

QTextBrowser
{
	color: black;
	background-color: white;
}

HelpBrowser
{
	color: black;
	background-color: white;
}

QHeaderView
{
	margin: 0px;
	border: 0px;
	padding: 0px;
}

QHeaderView::section
{
	background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343, stop:1 #656565);
	color: white;
	margin: 0px;
	border: 0px;
	padding: 0px;
	padding-left: 4px;
}

/* style the sort indicator */
QHeaderView::down-arrow
{
	image: url(:/qss_icons/images/down_arrow.png);
}

QHeaderView::up-arrow
{
	image: url(:/qss_icons/images/up_arrow.png);
}


/* We provide a min-width and min-height for push buttons
	so that they look elegant regardless of the width of the text. */
QPushButton
{
	background-color: #484848;
	border-width: 2px;
	color: grey;
	border-color: grey;
	border-style: solid;
	border-radius: 5;
	padding: 3px;
	min-width: 9ex;
	min-height: 2.5ex;
}

QPushButton:enabled
{
	border-color: gainsboro;
	border-style: solid;
	color: white;
}

QPushButton:hover
{
	background-color: silver;
}

QPushButton:pressed
{
	background-color: silver;
}
QPushButton:flat
{
	border-style: none;
}

/* Increase the padding, so the text is shifted when the button is
	pressed. */
QPushButton:pressed,QPushButton:checked
{
	padding-left: 5px;
	padding-top: 5px;
}

QPushButton:checked
{
	padding-left: 5px;
	padding-top: 5px;
	background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 dodgerblue, stop:1 midnightblue);
}

QToolButton
{ /* all types of tool button */
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
								stop: 0 #484848, stop: 1 dimgrey);
	border: none;
}

QToolButton:hover
{
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #484848, stop: 1 dimgrey);
}

QToolButton:pressed
{
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #484848, stop: 1 dimgrey);
	padding-left: 2px;
	padding-top: 2px;
}

QToolButton:checked
{
	background-image: url(:/qss_icons/images/null.png);
	background-repeat: repeat-x;
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 midnightblue, stop: 1 dodgerblue);
}

QToolButton#back
{
	background-image: url(:/qss_icons/images/Buttons/Back32.png);
	background-repeat: repeat-none;
    background-origin: content;
}

QToolButton#forward
{
	background-image: url(:/qss_icons/images/Buttons/Forward32.png);
	background-repeat: repeat-none;
    background-origin: content;
}

QToolButton#home
{
	background-image: url(:/qss_icons/images/Buttons/Home32.png);
	background-repeat: repeat-none;
    background-origin: content;
}
 
/* Bold text on status bar looks awful. */
QStatusBar QLabel
{
	font: normal;
}

QStatusBar::item
{
	border-width: 1;
	border-color: gainsboro;
	border-style: solid;
	border-radius: 2;
}

/* Password character */
QLineEdit[echoMode="2"]
{
	lineedit-password-character: 9679;
}

QComboBox, QLineEdit, QTextEdit, QListView
{
	background-color: #9098a0;
	selection-color: #0a214c;
	selection-background-color: dodgerblue;
}

QVectorEdit[colourEdit="true"] QLineEdit#x
{
	background-color: rgba(192,0,0)
}

QVectorEdit[colourEdit="true"] QLineEdit#y
{
	background-color: rgba(0,128,0)
}

QVectorEdit[colourEdit="true"] QLineEdit#z
{
	background-color: rgba(0,64,255)
}

QLineEdit#rayleighRed, #wavelengthNmRed, #mieRed
{
	background-color: rgba(192,0,0)
}

#rayleighGreen, #wavelengthNmGreen, #mieGreen
{
	background-color: rgba(0,128,0)
}

#rayleighBlue, #wavelengthNmBlue, #mieBlue
{
	background-color: rgba(0,64,255)
}


QDateEdit
{
	border: 1px solid silver;
	border-radius: 3px;
	padding: 1px 18px 1px 3px;
	min-width: 6em;
}
 
QDateEdit::drop-down
{
	background-color: #484848;
	subcontrol-origin: padding;
	subcontrol-position: top right;
	width: 15px;

	border-left-width: 1px;
	border-left-color: darkgray;
	border-left-style: solid; /* just a single line */
	border-top-right-radius: 3px; /* same radius as the QComboBox */
	border-bottom-right-radius: 3px;
	
	image: url(:/qss_icons/images/down_arrow.png);
	
 }

/* Reserve 1 pixel space in padding. When we get the focus,
	kill the padding and enlarge the border. This makes the items
	glow. */
QLineEdit
{
	color: white;
	border-width: 1px;
	padding: 1px;
	border-style: solid;
	border-color: silver;
	border-radius: 5px;
}

/* As above, eliminate the padding and increase the border. */
QLineEdit:focus
{
	background-color: #9098a0;
	border-color: white;
	border-width: 2px;
	padding: 1px 0px 0px 0px;
}

/* As above, eliminate the padding and increase the border. */
QFrame:focus
{
	border-width: 2px;
	padding: 1px;
}

/* A QLabel is a QFrame ... */
QLabel
{
	border: none;
	padding: 0;
	background: none;
}

/* A QToolTip is a QLabel ... */
QToolTip
{
	border: 2px solid gainsboro;
	padding: 5px;
	border-radius: 3px;
	opacity: 200;
}

QCheckBox
{
	spacing: 5px;
}

QCheckBox::indicator
{
	width: 13px;
	height: 13px;
}

/* Nice to have the background color change when hovered. */
QRadioButton:hover, QCheckBox:hover
{
	background-color: #484848;
}
QDial
{
	color:rgba(185, 185, 185, 255);
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(125, 125, 125, 255), stop:1 rgba(185, 185, 185, 255));
	border: 2px solid #CC7000;
}

QDial#daytimeHourDial
{
	color:rgba(185, 185, 185, 255);
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(72, 72, 72, 255), stop:1 rgba(105,105,105, 255));
	border: 2px solid #CC7000;
}

QDialog
{
	background-color: #484848;
}
/* Force the dialog's buttons to follow the Windows guidelines. */
QDialogButtonBox
{
	button-layout: 0;
}

#tabWidget
{
	background-color: blue;
}

QTabWidget::pane
{ /* The tab widget frame */
	border: none;
	border-left:0;
	border-right:0;
	padding-left:0;
	padding-right:0;
	margin-left:-2;
	margin-right:-2;
	border-top: none;
	background-color: blue;
}

QTabWidget::tab-bar
{
	background-color: blue;
	border: none;
	left: 5px; /* move to the right by 5px */
}

/* Style the tab using the tab sub-control. Note that it reads QTabBar _not_ QTabWidget */
QTabBar::tab
{
	background-color: #444444;
	border: none;
	border-bottom-color: red; /* same as the pane color */
	border-top-left-radius: 3px;
	border-top-right-radius: 3px;
	min-width: 16ex;
	padding: 8px;
	padding-bottom: 0px;
	padding-top: 3px;
	margin-bottom:0px;
	margin-top: 1px; 
	margin-left: 1px; 
}

QTabBar::tab:hover
 {
	background-color: #484848;
 }

QTabBar::tab:selected
{
	background: #535353;
	border: none;
	padding-top: 3px;
	margin-top: 0px; 
	margin-bottom: 0px; 
	padding-bottom: 4px;
	border-bottom: 0px; 
}

QSlider,QSliderEdit,QIntSliderEdit
{
	background: transparent;
}

QAbstractButton
{
	background: transparent;
}

QSlider::groove:horizontal
{
	border: 1px solid #333333;
	height: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
	margin: 1px 0;
}

QSlider::handle:horizontal
{
	background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
	border: 2px solid #333333;
	width: 18px;
	margin: -6px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
	border-radius: 3px;
}

QSlider::add-page:horizontal
{
	border: 1px solid #333333;
	height: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
	margin: 1px 0;
}

QSlider::sub-page:horizontal
{
	border: 1px solid #333333;
	height: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 dodgerblue, stop:1 midnightblue);
	margin: 1px 0;
}

QSlider::sub-page:horizontal:disabled
{
	background: dimgrey;
}

QSlider::groove:vertical
{
	border: 1px solid #333333;
	width: 4px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #c4c4c4);
	margin: 0 2px;
}

QSlider::handle:vertical
{
	background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
	border: 2px solid #333333;
	height: 18px;
	margin: 0 -4px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
	border-radius: 3px;
}

QSlider::sub-page:vertical
{
	border: 1px solid #333333;
	width: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #B1B1B1, stop:1 #c4c4c4);
	margin: 0 1px;
}

QSlider::add-page:vertical
{
	border: 1px solid #333333;
	width: 2px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 dodgerblue, stop:1 midnightblue);
	margin: 0 1px;
}
QSlider::add-page:vertical:disabled
{
	background: dimgrey;
}


QMenuBar
{
	background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
								stop:0 darkgrey, stop:1 #484848);
}

QMenuBar::item
{
	spacing: 3px; /* spacing between menu bar items */
	padding: 1px 12px;
	background: transparent;
	border-radius: 4px;
}

QMenuBar::item:selected
{ /* when selected using mouse or keyboard */
	background-color: dodgerblue;
}

QMenuBar::item:pressed {
	background: #888888;
}


QMenu
{
	background-color: #484848; /* sets background of the menu */
	border: 1px solid silver;
	border-radius: 5px;
	border-top: 0px;
}

QMenu::item
{
	/* sets background of menu item. set this to something non-transparent
		if you want menu color and menu item color to be different */
	background-color: transparent;
	padding: 2px 25px 2px 20px;
	border: 1px solid transparent; /* reserve space for selection border */

}
QMenu::item:disabled
{
	color: dimgrey;
}

QMenu::item:selected
{ /* when user selects item using mouse or keyboard */
	background-color: dodgerblue;
	border-color: darkblue;
 }
QMenu::item:selected:disabled
{ /* when selected using mouse or keyboard */
	background-color: transparent;
	border-color: dimgrey;
}

QMenu::icon:checked
{ /* appearance of a 'checked' icon */
	background: gray;
	border: 1px inset gray;
	position: absolute;
	top: 1px;
	right: 1px;
	bottom: 1px;
	left: 1px;
}
 
QScrollBar:vertical
{
	border: 2px solid grey;
	background: #353535;
	width: 15px;
	margin: 18px 0 18px 0;
}
	
QScrollBar::handle:vertical
{
	background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #b4b4b4, stop:1 #8f8f8f);
	min-height: 20px;
}

QScrollBar::add-line:vertical
{
	border: 2px solid grey;
	background: darkgrey;
	height: 20px;
	subcontrol-position: bottom;
	subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical
{
	 border: 2px solid grey;
	 background: darkgrey;
	 height: 20px;
	 subcontrol-position: top;
	 subcontrol-origin: margin;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical
{
	color:white;
	border: none;
	width: 11px;
	height: 11px;
	background: none;
}
	
QScrollBar::up-arrow:vertical
{
	image: url(:/qss_icons/images/up_arrow.png);
}

QScrollBar::down-arrow:vertical
{
	image: url(:/qss_icons/images/down_arrow.png);
}

QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical
{
	background: none;
}

SkyEditWidget
{
	background-color:#353535;
}

CloudLayerEditWidget
{
	background-color:#353535;
}

KeyframeEditWidget
{
	background-color:#353535;
}

CloudKeyframeEditWidget,#main
{
	background-color:#252525;
}

SkyTimelineWidget
{
	border-width: 1px;
	padding: 1px;
	border-style: solid;
	border-color: dimgrey;
	border-radius: 5px;
}

QGroupBox
{
	font:bold;
	font-size:12px;
	color:silver;
	margin:4px;
	border: none;
	border-radius: 4px;
	margin-top: 3ex; /* leave space at the top for the title */
	background-image: url(:/qss_icons/images/groupbox_top.png); 
	border-width: 25px 2px 2px 2px; 
    background-position: top left;
    background-origin: content;
    background-repeat: repeat-x;
	background-color:transparent;
	background-color:none;
}

QGroupBox::title
{
	background-color:transparent;
	font: bold large;
	font-size: 16px;
	font-family: "Times";
	border-top-right-radius: 4px;
	border-top-left-radius: 4px;
	subcontrol-origin: padding;
	subcontrol-position: top left;
    padding: 4;
}

QGroupBox::indicator
{
    width: 13px;
    height: 13px;
}

QGroupBox::indicator:unchecked
{
	image: url(:/qss_icons/images/closed_indicator.png);
}

QGroupBox::indicator:checked
{
	image: url(:/qss_icons/images/open_indicator.png);
}

QGroupBox::indicator:unchecked:hover
{
	image: url(:/qss_icons/images/closed_indicator_hover.png);
}

QGroupBox::indicator:checked:hover
{
	image: url(:/qss_icons/images/open_indicator_hover.png);
}

QProgress
{
	background-color: darkgrey;
}

QProgressBar::chunk:disabled
{
	background-color: dimgrey;
}
QPushButton#reset
{
	border:none;
	background-color: none;
	background-repeat: repeat-none;
    background-origin: content;
	background-image: url(:/images/reset.png);
}
QPushButton#reset:disabled
{
	background: none;
}
